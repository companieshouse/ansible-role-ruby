---
- name: Install packages required to build ruby (RedHat).
  yum: "name={{ item }} state=present"
  with_items:
    - '@development'
    - zlib-devel
    - openssl-static
  when: ansible_os_family == 'RedHat'

- name: Update apt cache (Debian).
  apt: update_cache=yes cache_valid_time=86400
  when: ansible_os_family == 'Debian'

- name: Install packages required to build ruby (Debian).
  apt: "name={{ item }} state=present"
  with_items:
    - build-essential
    - zlib1g-dev
    - libssl-dev
    - libyaml-dev
    - libreadline6-dev
    - zlib1g-dev
    - libncurses5-dev
    - libffi-dev
    - libgdbm3
    - libgdbm-dev
  when: ansible_os_family == 'Debian'

- name: Check ruby version.
  command: bash -lc "ruby --version"
  register: current_ruby_version
  failed_when: false
  changed_when: false
  check_mode: no

- name: Download ruby.
  get_url:
    url: "{{ ruby_download_url }}"
    dest: "{{ workspace }}/ruby-{{ ruby_version }}.tar.gz"
  when: "'{{ ruby_version }}' not in current_ruby_version.stdout"

- name: Extract ruby.
  unarchive:
    src: "{{ workspace }}/ruby-{{ ruby_version }}.tar.gz"
    dest: "{{ workspace }}/"
    copy: no
  when: "'{{ ruby_version }}' not in current_ruby_version.stdout"

- name: Remove old ruby version
  file:
    path: "/usr/local/bin/{{ item }}"
    state: absent
  with_items:
    - erb
    - gem
    - irb
    - rake
    - rdoc
    - ruby 
  when: "'{{ ruby_version }}' not in current_ruby_version.stdout"

- name: Build ruby.
  command: >
    {{ item }}
    chdir={{ workspace }}/ruby-{{ ruby_version }}
  with_items:
    - ./configure --enable-shared
    - make
    - make install
  when: "'{{ ruby_version }}' not in current_ruby_version.stdout"

- name: Add ruby symlinks.
  file:
    src: "/usr/local/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
    force: yes
  with_items:
    - erb
    - gem
    - irb
    - rake
    - rdoc
    - ruby
